@import "../sass-config/variables";
@import "../sass-config/mixins";

@keyframes skeleton-loading {
  0% {
    background-color: hsl(200, 20%, 80%);
  }
  100% {
    background-color: hsl(200, 20%, 95%);
  }
}

.PreviewPageSkeleton {
  height: 100vh;
  @include flex(flex-start, flex-start, column);
  gap: $gap-between-connected-elements;

  .slider {
    @include flex(flex-start, center, column);
    width: 100%;
    height: calc(95vh - 160px);
    background: $lightGray;
    padding: $padding-for-page-component;
    box-shadow: 0px -4px 15px $shadows-black;
    border-radius: 0 0 20px 20px;
    animation: skeleton-loading 1s linear infinite alternate;

    .text {
      @include flex(flex-start, flex-start, column);
      gap: $gap-between-connected-elements;
      padding: $manual-padding;
      width: min(736px, 100%);
      backdrop-filter: blur(10px);
      border-radius: 15px;
      animation: skeleton-loading 1s linear infinite alternate;
      filter: brightness(0.9);
      margin-top: 50px;

      .headlineContainer {
        @include flex(flex-start, flex-start, column);
        gap: $gap-between-closely-placed-elements;

        .headline {
          line-height: 120%;
          color: transparent;
          animation: skeleton-loading 1s linear infinite alternate;
          filter: brightness(0.8);
        }

        .subheadline {
          line-height: 120%;
          color: transparent;
          animation: skeleton-loading 1s linear infinite alternate;
          filter: brightness(0.8);
        }
      }

      .buttonContainer {
        @include flex(flex-start, flex-start, row);
        gap: $gap-between-closely-placed-elements;

        .btn {
          color: transparent;
          border: none;
          outline: none;
          pointer-events: none;
          filter: brightness(0.8);
          animation: skeleton-loading 1s linear infinite alternate;

          @include flex(center, center, row, no-wrap);
          align-items: center;
          padding: 10px 25px;
          gap: 15px;
          border-radius: 5px;
        }
      }
    }
  }

  .cityContainer {
    @include flex(flex-start, flex-start, row, no-wrap);
    width: 100%;
    max-width: 100vw;
    height: auto;
    gap: $gap-between-connected-elements;
    z-index: 2;
    position: absolute;
    top: calc(95vh - 140px);
    left: 0;
    right: 0;
    padding: 25px;
    overflow-x: auto;


    /* width */
    &::-webkit-scrollbar {
      height: 10px;
    }

    /* Track */
    &::-webkit-scrollbar-track {
      background: #f1f1f1;
    }

    /* Handle */
    &::-webkit-scrollbar-thumb {
      background: $accent-color;
      border-radius: 5px;
    }

    /* Handle on hover */
    &::-webkit-scrollbar-thumb:hover {
      background: $accent-color;
    }

    .iconsContainer {
      @include flex(flex-start, flex-start, column);
      gap: 5px;
      opacity: 1;
      transition: opacity 0.3s;


      .btnContainer {
        padding: 3px;
        border-radius: 5px;
        @include flex(center, center, row);
        transition: background-position 0.3s ease-out;
        background-image: linear-gradient(317.08deg, #D9D9D9 0%, #D9D9D9 50%, #FFA439 50%, #FF7814 100%);
        background-size: 260%;
        background-position: 100% 100%;
      }

      &:hover {
        opacity: 1;
        transition-delay: 0.08s;
      }

      &_active {
        opacity: 1;

        .btnContainer {
          background-position: 0, 0;

          .iconsContainerIcon {

            .iconsContainerIconPhoto {
              opacity: 1;
              filter: none;
              display: block;
            }
          }
        }
      }

      .iconsContainerIcon {
        width: 150px;
        height: 80px;
        border-radius: 5px;
        overflow: hidden;
        border: none;
        cursor: pointer;
        animation: skeleton-loading 1s linear infinite alternate;


        .iconsContainerIconPhoto {
          width: 100%;
          height: 100%;
          opacity: 0.8;
          filter: grayscale(1);
          transition: opacity 0.3s, filter 0.3s;
          object-fit: cover;
          user-select: none;
        }
      }

      .iconsContainerIconPhotoName {
        color: transparent;
        user-select: none;
        pointer-events: none;
        width: 90%;
        height: calc(10px * 1.2);
        background: $lightGray;
        animation: skeleton-loading 1s linear infinite alternate;
      }
    }
  }
}

@media screen and (max-width: 1100px) {
  .PreviewPageSkeleton {
    .slider {
      padding: $manual-padding;
    }
  }
}